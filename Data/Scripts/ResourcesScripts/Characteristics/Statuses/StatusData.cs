using Godot;
using System;

public partial class StatusData : Resource
{
	[ExportGroup("–ü—Ä–µ—Ñ–∞–± –µ—Ñ—Ñ–µ–∫—Ç–∞")]
	//–°—Ü–µ–Ω–∞ –µ—Ñ—Ñ–µ–∫—Ç–∞(–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
	[Export] public PackedScene scene { get; set; }



	[ExportGroup("–ó–¥–æ—Ä–æ–≤—å–µ")]
	//–ó–¥–æ—Ä–æ–≤—å–µ
	[Export(PropertyHint.Range, "-50, 50, 1")] public int HP { get; set; }



	[ExportGroup("–£—Ä–æ–Ω –Ω–∞–Ω–æ—Å–∏–º—ã–π –æ–±—ä–µ–∫—Ç—É")]
	//–§–∏–∑–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω
	[Export(PropertyHint.Range, "-50, 50, 1")] public int physicalDamage { get; set; }



	[ExportGroup("–û—á–∫–∏")]
	//–û—á–∫–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è
	[Export(PropertyHint.Range, "-50, 50, 1")] public int movePoint { get; set; }

	//–û—á–∫–∏ –î–µ–π—Å—Ç–≤–∏–π
	[Export(PropertyHint.Range, "-50, 50, 1")] public int actionPoint { get; set; }

	//–û—á–∫–∏ –ø–∏–≤–∞
	[Export(PropertyHint.Range, "-50, 50, 1")] public int beerPoint { get; set; }



	[ExportGroup("–û—Å–Ω–æ–≤–Ω—ã–∫ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏")]
	//–°–∏–ª–∞
	[Export(PropertyHint.Range, "-50, 50, 1")] public int strength { get; set; }

	//–õ–æ–≤–∫–æ—Å—Ç—å
	[Export(PropertyHint.Range, "-50, 50, 1")] public int agility { get; set; }

	//–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç
	[Export(PropertyHint.Range, "-50, 50, 1")] public int intel { get; set; }

	//–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ
	[Export(PropertyHint.Range, "-50, 50, 1")] public int constitution { get; set; }

	//–ú—É–¥—Ä–æ—Å—Ç—å
	[Export(PropertyHint.Range, "-50, 50, 1")] public int wisdom { get; set; }





	[ExportGroup("–í—Ç–æ—Ä–∏—á–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏")]
	//–£–∫–ª–æ–Ω–µ–Ω–∏–µ
	[Export(PropertyHint.Range, "-50, 50, 1")] public int dodge { get; set; }

	//–ü–µ—Ä–µ–Ω–æ—Å–∏–º—ã–π –≤–µ—Å
	[Export(PropertyHint.Range, "-50, 50, 1")] public int carryingCapacity { get; set; }

	//–°–∫–æ—Ä–æ—Å—Ç—å
	[Export(PropertyHint.Range, "-50, 50, 1")] public int speed { get; set; }

	//–°–∫–æ—Ä–æ—Å—Ç—å –∞—Ç–∞–∫–∏
	[Export(PropertyHint.Range, "-50, 50, 1")] public int attackSpeed { get; set; }

	//–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω
	[Export(PropertyHint.Range, "-50, 50, 1")] public int criticalDamage { get; set; }

	//–®–∞–Ω—Å –∫—Ä–∏—Ç–∞–Ω—É—Ç—å
	[Export(PropertyHint.Range, "-50, 50, 1")] public int criticalDamageChance { get; set; }

	//–¢–æ—á–Ω–æ—Å—Ç—å
	[Export(PropertyHint.Range, "-50, 50, 1")] public int precision { get; set; }

	//–û–ø—å—è–Ω–µ–Ω–∏–µ
	[Export(PropertyHint.Range, "-50, 50, 1")] public int drunkenness { get; set; }





	[ExportGroup("–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è –∫ —É—Ä–æ–Ω—É")]
	//–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –∫–æ–ª—é—â–µ–º—Éüìå
	[Export(PropertyHint.Range, "-50, 50, 1")] public int prickResist { get; set; }

	//–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —Ä–µ–∂—É—â–µ–º—Éüî™
	[Export(PropertyHint.Range, "-50, 50, 1")] public int slashResist { get; set; }

	//–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –¥—Ä–æ–±—è—â–µ–º—Éüî®
	[Export(PropertyHint.Range, "-50, 50, 1")] public int crushResist { get; set; }

	//–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —è–¥–∞–ºüçÑ
	[Export(PropertyHint.Range, "-50, 50, 1")] public int poisonResist { get; set; }

	//–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –æ–≥–Ω—éüî•
	[Export(PropertyHint.Range, "-50, 50, 1")] public int fireResist { get; set; }

	//–°–æ–ø—Ä–æ—Å—Ç–∏–≤–ª–µ–Ω–∏–µ –º–æ—Ä–æ–∑—É‚ùÑ 
	[Export(PropertyHint.Range, "-50, 50, 1")] public int frostResist { get; set; }

	//–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∫–ª—è—Ç–∏—é‚ò†
	[Export(PropertyHint.Range, "-50, 50, 1")] public int curseResist { get; set; }

	//–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤—É‚õà
	[Export(PropertyHint.Range, "-50, 50, 1")] public int electricalResist { get; set; }

	//–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –ê–ª–ö–æ–ì–æ–õ—éüç∫
	[Export(PropertyHint.Range, "-50, 50, 1")] public int drunkennessResist { get; set; }
}
